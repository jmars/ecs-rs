var searchIndex = {};
searchIndex['ecs'] = {"items":[[0,"","ecs","# ECS\n## Entity Component System"],[1,"Entity","",""],[1,"App","",""],[4,"Entities","",""],[4,"Systems","",""],[6,"Component","",""],[6,"System","",""],[9,"run","","",0],[10,"clone","alloc::boxed","",1],[10,"new","ecs","",2],[10,"find","","",2],[10,"find_mut","","",2],[10,"insert","","",2],[10,"remove","","",2],[10,"contains","","",2],[10,"len","","",2],[10,"is_empty","","",2],[10,"clear","","",2],[10,"call_once","alloc::boxed","",1],[10,"new","ecs","",3],[10,"start","","",3],[10,"shutdown","","",3],[10,"run","","",3],[10,"send","","",3]],"paths":[[6,"System"],[1,"Box"],[1,"Entity"],[1,"App"]]};
searchIndex['unsafe-any'] = {"items":[[0,"","unsafe-any","Traits for unsafe downcasting from trait objects to & or &mut references of\nconcrete types. These should only be used if you are absolutely certain of the\ntype of the data in said trait object - there be dragons etc."],[6,"UncheckedAnyDowncast","","An extension trait for unchecked downcasting of trait objects to &T."],[9,"downcast_ref_unchecked","","Returns a reference to the boxed value, assuming that it is of type `T`. If you\nare not _absolutely certain_ of `T` you should _not_ call this!",0],[6,"UncheckedAnyMutDowncast","","An extension trait for unchecked downcasting of trait objects to &mut T."],[9,"downcast_mut_unchecked","","Returns a mutable reference to the boxed value, assuming that it is of type `T`. If you\nare not _absolutely certain_ of `T` you should _not_ call this!",1]],"paths":[[6,"UncheckedAnyDowncast"],[6,"UncheckedAnyMutDowncast"]]};

initSearch(searchIndex);
